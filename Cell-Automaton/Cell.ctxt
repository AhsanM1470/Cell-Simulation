#BlueJ class context
comment0.target=Cell
comment0.text=\r\n\ A\ class\ representing\ the\ shared\ characteristics\ of\ all\ forms\ of\ life\r\n\r\n\ @author\ David\ J.\ Barnes,\ Michael\ K\u00F6lling\ &\ Jeffery\ Raphael\r\n\ @version\ 2022.01.06\ (1)\r\n
comment1.params=field\ location\ col
comment1.target=Cell(Field,\ Location,\ java.awt.Color)
comment1.text=\r\n\ Create\ a\ new\ cell\ at\ location\ in\ field.\r\n\r\n\ @param\ field\ The\ field\ currently\ occupied.\r\n\ @param\ location\ The\ location\ within\ the\ field.\r\n
comment10.params=location
comment10.target=void\ setLocation(Location)
comment10.text=\r\n\ Place\ the\ cell\ at\ the\ new\ location\ in\ the\ given\ field.\r\n\ @param\ location\ The\ cell's\ location.\r\n
comment11.params=
comment11.target=Field\ getField()
comment11.text=\r\n\ Return\ the\ cell's\ field.\r\n\ @return\ The\ cell's\ field.\r\n
comment12.params=
comment12.target=int\ getAge()
comment13.params=
comment13.target=void\ setAgeZero()
comment14.params=
comment14.target=void\ incrementAge()
comment15.params=
comment15.target=double\ getSpawnRate()
comment16.params=newRate
comment16.target=void\ setSpawnRate(double)
comment17.params=
comment17.target=java.util.List\ getNeighbours()
comment18.params=c
comment18.target=int\ getCellCount(java.lang.Class)
comment18.text=\r\n\ This\ returns\ the\ number\ of\ neighbours\ of\ a\ particular\ Cell\ subclass.\r\n\ Takes\ a\ class\ as\ a\ parameter\ (for\ example\ "Mycoplasma.class")\ and\ checks\ how\ many\ neighbours\r\n\ of\ that\ class\ the\ cell\ using\ this\ method\ has.\r\n\ @param\ c\r\n\ @return\ Number\ of\ neighbours\ of\ Class\ c.\r\n
comment19.params=
comment19.target=int\ getNearbyWhiteMaturity()
comment19.text=\r\n\ A\ new\ white\ blood\ cell\ is\ considered\ "young"\r\n\ Check\ if\ the\ white\ blood\ cell\ is\ "mature"\ (returns\ 1)\ or\ "elder"\ (returns\ 2).\r\n\ Mature\ white\ blood\ cells\ can\ attack\ Mycoplasma\ cells.\r\n\ Elder\ white\ blood\ cells\ can\ attack\ Mycoplasma\ and\ Cancer\ cells.\r\n\ Age\ starts\ at\ 1\ to\ prevent\ issues\ with\ the\ modulo\ operator\ when\ looking\ for\ a\ zero\ value\r\n\ @return\ 1\ if\ the\ white\ blood\ cell\ is\ >\=\ 6\ generations\ old\r\n\ @return\ 2\ if\ the\ white\ blood\ cell\ is\ >\=\ 11\ generations\ old\r\n
comment2.params=
comment2.target=void\ act()
comment2.text=\r\n\ Make\ this\ cell\ act\ -\ that\ is\:\ the\ cell\ decides\ it's\ status\ in\ the\r\n\ next\ generation.\r\n
comment20.params=
comment20.target=boolean\ replicableCancerNearby()
comment3.params=
comment3.target=boolean\ isAlive()
comment3.text=\r\n\ Check\ whether\ the\ cell\ is\ alive\ or\ not.\r\n\ @return\ true\ if\ the\ cell\ is\ still\ alive.\r\n
comment4.params=
comment4.target=void\ setDead()
comment4.text=\r\n\ Indicate\ that\ the\ cell\ is\ no\ longer\ alive.\r\n
comment5.params=value
comment5.target=void\ setNextState(boolean)
comment5.text=\r\n\ Indicate\ that\ the\ cell\ will\ be\ alive\ or\ dead\ in\ the\ next\ generation.\r\n
comment6.params=
comment6.target=void\ updateState()
comment6.text=\r\n\ Changes\ the\ state\ of\ the\ cell\r\n
comment7.params=col
comment7.target=void\ setColor(java.awt.Color)
comment7.text=\r\n\ Changes\ the\ color\ of\ the\ cell\r\n
comment8.params=
comment8.target=java.awt.Color\ getColor()
comment8.text=\r\n\ Returns\ the\ cell's\ color\r\n
comment9.params=
comment9.target=Location\ getLocation()
comment9.text=\r\n\ Return\ the\ cell's\ location.\r\n\ @return\ The\ cell's\ location.\r\n
numComments=21
